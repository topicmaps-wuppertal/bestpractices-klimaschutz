{"version":3,"sources":["helper/filter.js","helper/itemConverter.js","helper/titleFactory.js","version.js","MenuFooter.js","Menu.js","SecondaryInfo.js","KlimaorteMap.js","App.js","reportWebVitals.js","index.js"],"names":["itemFilterFunction","filterState","filterMode","item","themen","includes","thema","id","kategorien","cat","convertBPKlimaItemsToFeature","itemIn","a","addSVGToProps","i","icon","text","standort","name","geometry","geojson","farbe","color","info","header","title","additionalInfo","beschreibung","subtitle","strasse","hausnummer","plz","stadt","url","website","bild","foto","type","selected","crs","properties","factory","featureCollectionContext","getThemaById","result","items","find","themenstadtplanDesc","filteredItems","length","undefined","themenIds","push","join","APPERSION","getApplicationVersion","Footer","setAppMenuActiveMenuSection","useContext","UIDispatchContext","style","fontSize","className","onClick","scroller","scrollTo","containerId","document","href","target","reactCismapVersion","rel","MyMenu","FeatureCollectionContext","shownFeatures","FeatureCollectionDispatchContext","setFilterState","setFilterMode","katValues","themenValues","kat","key","sort","b","localeCompare","t","k","filterConfiguration","mode","filters","values","setAll","setNone","colorizer","configurableDocBlocks","getSimpleHelpForTM","configs","splice","bsStyle","contentBlockConf","content","Icon","class","CustomizationContextProvider","customizations","inKartePositionieren","listWithSymbols","fachobjekteAuswaehlen","furtherExplanationOfClickableContent","hintergrund","additionalDatasources","ModalApplicationMenu","menuIcon","menuTitle","menuFooter","MenuFooter","menuIntroduction","to","smooth","delay","menuSections","Section","sectionKey","sectionTitle","term","count","getFilterHeader","sectionBsStyle","sectionContent","FilterPanel","DefaultSettingsPanel","ConfigurableDocBlocks","NW","props","whiteSpace","children","InfoPanel","selectedFeature","angebot","footer","weitereAngebote","filter","testItem","addOffers","ang","console","log","subSections","SecondaryInfoPanelSection","padding","paddingTop","bemerkung","kommentar","first","border","xwidth","Object","keys","map","index","separator","colspan","paddingLeft","paddingright","borderBottom","paddingBottom","verticalAlign","val","minHeight4MainSextion","SecondaryInfo","titleIconName","mainSection","width","minHeight","alt","paddingRight","float","src","getGazData","setGazData","prefix","sources","md5FetchText","dataHost","adressen","bezirke","quartiere","bpklimastandorte","gazData","getGazDataForTopicIds","KlimaorteMap","setSelectedFeatureByPredicate","zoomToFeature","TopicMapDispatchContext","useState","useEffect","moreDataAvailable","TopicMapComponent","applicationMenuTooltipString","locatorControl","modalMenu","gazetteerSearchPlaceholder","homeZoom","infoBox","GenericInfoBoxFromFeature","pixelwidth","config","displaySecondaryInfoAction","city","navigator","noun","singular","plural","noCurrentFeatureTitle","noCurrentFeatureContent","secondaryInfo","gazetteerHitTrigger","hits","Array","isArray","more","feature","check","parseInt","e","FeatureCollection","App","TopicMapContextProvider","appKey","featureTooltipFunction","featureItemsURL","referenceSystemDefinition","MappingConstants","proj4crs25832def","mapEPSGCode","referenceSystem","crs25832","getFeatureStyler","getGTMFeatureStyler","convertItemToFeature","clusteringOptions","iconCreateFunction","getClusterIconCreatorFunction","clusteringEnabled","titleFactory","classKeyFunction","getColorFromProperties","additionalLayerConfiguration","fernwaerme","textAlign","initialActive","layer","StyledWMSTileLayer","layers","format","tiled","transparent","maxZoom","opacity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+UAgBeA,EAhBY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACzC,OAAO,SAACC,GACwB,IAAD,EAA7B,GAAmB,WAAfD,EACF,cAAOD,QAAP,IAAOA,GAAP,UAAOA,EAAaG,cAApB,aAAO,EAAqBC,SAASF,EAAKG,MAAMC,IAC3C,GAAmB,eAAfL,EAA6B,CAAC,IAAD,gBACpBC,EAAKK,YADe,IACtC,2BAAmC,CAAC,IAAD,EAAxBC,EAAwB,QACjC,UAAIR,QAAJ,IAAIA,GAAJ,UAAIA,EAAaO,kBAAjB,aAAI,EAAyBH,SAASI,GACpC,OAAO,GAH2B,8BAMtC,OAAO,EAEP,OAAO,I,yCC+BEC,EA1CmB,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,sEAClBC,YAAcF,GAAQ,SAACG,GAAD,OAAOA,EAAER,MAAMS,QADnB,cAC/BZ,EAD+B,OAE7Ba,GAAW,OAAJb,QAAI,IAAJA,GAAA,UAAAA,EAAMc,gBAAN,eAAgBC,OAAQ,gBACxB,WACI,EACXC,EAL6B,OAKlBhB,QALkB,IAKlBA,GALkB,UAKlBA,EAAMc,gBALY,aAKlB,EAAgBG,QALE,OAMrBjB,QANqB,IAMrBA,GANqB,UAMrBA,EAAMG,aANe,aAMrB,EAAae,MAE3BlB,EAAKmB,MAAL,OAAanB,QAAb,IAAaA,OAAb,EAAaA,EAAMG,MAAMe,MACnBE,EAAO,CACXC,OAAQrB,EAAKG,MAAMY,KACnBO,MAAOT,EACPU,eAAc,OAAEvB,QAAF,IAAEA,OAAF,EAAEA,EAAMwB,aACtBC,SACE,wCACGzB,QADH,IACGA,GADH,UACGA,EAAMc,gBADT,aACG,EAAgBY,QADnB,WAC6B1B,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAMc,gBADnC,aAC6B,EAAgBa,WAC3C,uBAFF,OAGG3B,QAHH,IAGGA,GAHH,UAGGA,EAAMc,gBAHT,aAGG,EAAgBc,IAHnB,WAGyB5B,QAHzB,IAGyBA,GAHzB,UAGyBA,EAAMc,gBAH/B,aAGyB,EAAgBe,UAI7C7B,EAAKoB,KAAOA,EACZpB,EAAK8B,IAAL,OAAW9B,QAAX,IAAWA,OAAX,EAAWA,EAAM+B,QACb/B,EAAKgC,OACPhC,EAAKiC,KAAO,2DAA6DjC,EAAKgC,MAxB7C,kBA2B5B,CACLnB,OACAqB,KA1BW,UA2BXC,SA1Be,MA2BfnB,WACAoB,IAAK,CACHF,KAAM,OACNG,WAAY,CACVtB,KAAM,gCAGVsB,WAAYrC,IAtCqB,4CAAH,sDCwDnBsC,EAzDC,SAAC,GAAkC,IAAD,MAA/BC,EAA+B,EAA/BA,yBACXC,EAAe,SAACpC,GAAQ,IAAD,IACrBqC,EAAM,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAA0BG,aAA7B,aAAG,EAAiCC,MAAK,SAAC3C,GAAD,aAAc,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMG,aAAN,eAAaC,MAAOA,KACnF,cAAOqC,QAAP,IAAOA,GAAP,UAAOA,EAAQtC,aAAf,aAAO,EAAeY,MAGpB6B,EAAsB,IAC1B,IAA4B,OAAxBL,QAAwB,IAAxBA,GAAA,UAAAA,EAA0BM,qBAA1B,eAAyCC,WAAzC,OAAoDP,QAApD,IAAoDA,GAApD,UAAoDA,EAA0BG,aAA9E,aAAoD,EAAiCI,QACvFF,OAAsBG,OACjB,GAA6C,YAAjB,OAAxBR,QAAwB,IAAxBA,OAAA,EAAAA,EAA0BxC,YAAyB,CAAC,IAAD,IAC5D,IAA4B,OAAxBwC,QAAwB,IAAxBA,GAAA,UAAAA,EAA0BzC,mBAA1B,mBAAuCG,cAAvC,eAA+C6C,SAAU,EAAG,CAAC,IAAD,IACxDE,EAAS,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAA0BzC,mBAA7B,aAAG,EAAuCG,OACnDA,EAAS,GAF+C,cAG7C+C,GAH6C,IAG9D,2BAA4B,CAAC,IAAlB5C,EAAiB,QAC1BH,EAAOgD,KAAKT,EAAapC,KAJmC,8BAO9DwC,EAAsB,8BAAgC3C,EAAOiD,KAAK,MAAQ,QACrE,CAAC,IAAD,IACLN,EACE,kCACAL,QADA,IACAA,GADA,UACAA,EAA0BzC,mBAD1B,iBACA,EAAuCG,cADvC,aACA,EAA+C6C,QAC/C,iBAEC,GAA6C,gBAAjB,OAAxBP,QAAwB,IAAxBA,OAAA,EAAAA,EAA0BxC,YAA6B,CAAC,IAAD,IACI,IAK7D,IALP,IAA4B,OAAxBwC,QAAwB,IAAxBA,GAAA,UAAAA,EAA0BzC,mBAA1B,mBAAuCO,kBAAvC,eAAmDyC,SAAU,EAC/DF,EACE,0CACAL,QADA,IACAA,GADA,UACAA,EAA0BzC,mBAD1B,iBACA,EAAuCO,kBADvC,aACA,EAAmD6C,KAAK,OACxD,SAEFN,EACE,sCACAL,QADA,IACAA,GADA,UACAA,EAA0BzC,mBAD1B,iBACA,EAAuCO,kBADvC,aACA,EAAmDyC,QACnD,eAIN,OAAwD,KAA5B,OAAxBP,QAAwB,IAAxBA,GAAA,UAAAA,EAA0BM,qBAA1B,eAAyCC,QAEzC,gCACE,0DADF,2DAMAF,EAEA,gCACE,iDADF,IAC2BA,UAI7B,G,gICrDEO,EAAY,SAGLC,EAAwB,WAKjC,OAAOD,G,SC0CIE,EA5CA,WAAO,IACZC,EAAgCC,qBAAWC,KAA3CF,4BAER,OACE,sBAAKG,MAAO,CAAEC,SAAU,QAAxB,UACE,kDADF,wEAC0F,IACxF,mBACEC,UAAU,qBACVC,QAAS,WACPN,EAA4B,QAC5BO,WAASC,SAAS,iBAAkB,CAAEC,YAAa,YAJvD,+CASA,uBACA,gCACE,8BACGC,SAAS1C,MADZ,KACqB8B,OAFvB,IAII,IACF,mBAAGa,KAAK,qBAAqBC,OAAO,UAApC,yBAEK,IAPP,gBAQgB,IACd,mBAAGD,KAAK,wBAAwBC,OAAO,QAAvC,qBAEK,IAXP,MAYM,IACJ,oBAAGD,KAAK,0BAA0BC,OAAO,UAAzC,kCACwBC,OACnB,IAfP,IAgBI,IACF,mBACED,OAAO,SACPE,IAAI,sBACJH,KAAK,+CAHP,6D,QCuPOI,EA3QA,WAAO,IAAD,EACXf,EAAgCC,qBAAWC,KAA3CF,4BADW,EAGjBC,qBAAWe,KADLxE,EAFW,EAEXA,YAAaC,EAFF,EAEEA,WAAY8C,EAFd,EAEcA,cAAe0B,EAF7B,EAE6BA,cAF7B,EAIuBhB,qBAAWiB,KAA7CC,EAJW,EAIXA,eAAgBC,EAJL,EAIKA,cAEhBhC,EAAUa,qBAAWe,KAArB5B,MAEJrC,EAAa,GACXsE,EAAY,GACd1E,EAAS,GACP2E,EAAe,GAXF,cAaAlC,GAAS,IAbT,IAanB,2BAAgC,CAAC,IAAD,EAArB1C,EAAqB,sBACZA,EAAKK,YADO,IAC9B,2BAAmC,CAAC,IAAzBwE,EAAwB,QAC5BxE,EAAWH,SAAS2E,KACvBF,EAAU1B,KAAK,CAAE6B,IAAKD,IACtBxE,EAAW4C,KAAK4B,KAJU,8BAOzB5E,EAAOC,SAASF,EAAKG,MAAMC,MAC9BH,EAAOgD,KAAKjD,EAAKG,MAAMC,IACvBwE,EAAa3B,KAAK,CAAE6B,IAAK9E,EAAKG,MAAMC,GAAIkB,MAAOtB,EAAKG,MAAMY,KAAMI,MAAOnB,EAAKG,MAAMe,UAtBnE,8BA0BnB0D,EAAaG,MAAK,SAACtE,EAAGuE,GAAJ,OAAUvE,EAAEa,MAAM2D,cAAcD,EAAE1D,UACpDqD,EAAUI,MAAK,SAACtE,EAAGuE,GAAJ,OAAUvE,EAAEqE,IAAIG,cAAcD,EAAEF,QAE/C7E,EAAS,GAET,cAAgB2E,EAAhB,eAA8B,CAAzB,IAAMM,EAAC,KACVjF,EAAOgD,KAAKiC,EAAEJ,KAEhBzE,EAAa,GAEb,cAAgBsE,EAAhB,eAA2B,CAAtB,IAAMQ,EAAC,KACV9E,EAAW4C,KAAKkC,EAAEL,KAGpB,IAAMM,EAAsB,CAC1BC,KAAM,OACNC,QAAS,CACP,CACEhE,MAAO,SACPwD,IAAK,SACLlE,KAAM,SACNsB,KAAM,OACNqD,OAAQX,EACRY,OAAQ,WACNf,EAAe,2BAAK3E,GAAN,IAAmBG,aAEnCwF,QAAS,WACPhB,EAAe,2BAAK3E,GAAN,IAAmBG,OAAQ,OAE3CyF,UAAW,SAAC1F,EAAMmC,GAAP,OAAqBA,EAAWnC,EAAKmB,MAAQ,YAE1D,CACEG,MAAO,aACPwD,IAAK,aACLlE,KAAM,OACNsB,KAAM,OACNqD,OAAQZ,EACRa,OAAQ,WACNf,EAAe,2BAAK3E,GAAN,IAAmBO,iBAEnCoF,QAAS,WACPhB,EAAe,2BAAK3E,GAAN,IAAmBO,WAAY,eAMhC0C,IAAhBjD,OAAwCiD,IAAVL,GACjC+B,EAAe,CAAEpE,aAAYJ,gBAEX8C,IAAfhD,OAAuCgD,IAAVL,GAChCgC,EAAc,UAEhB,IAiBMiB,EAAwBC,YAjBR,0BACH7C,WAsDnB,OArCA4C,EAAsB,GAAGE,QAAQC,OAAO,EAAG,EAAG,CAC5CxE,MAAO,UACPyE,QAAS,UACTC,iBAAkB,CAChB9D,KAAM,YACN+D,QACE,gCACE,6CACmB,4CADnB,uCAC8E,IAC5E,cAACC,EAAA,EAAD,CAAMnF,KAAK,SAFb,gXAQA,8WAI0E,IACxE,mBAAGoF,MAAM,eAAT,kBALF,SAKwC,mBAAGA,MAAM,eAAT,mBALxC,OAOA,yGAEE,4CAFF,2iBAgBN,cAACC,EAAA,EAAD,CACEC,eAAgB,CACdC,qBAAsB,CACpBC,gBACE,wIAEmB,IACjB,eAAC,EAAD,WACE,cAACL,EAAA,EAAD,CAAMnF,KAAK,WADb,kBAHF,QAMQ,IACN,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,cADb,eAPF,SAUS,IACP,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,SADb,cAXF,SAcS,IACP,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,SADb,iCAfF,SAkBS,IACP,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,UADb,6BAnBF,SAsBS,IACP,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,mBADb,aAEM,IAzBR,aA0Ba,IACX,eAAC,EAAD,WACE,cAACmF,EAAA,EAAD,CAAMnF,KAAK,QADb,eAEM,IA7BR,eAkCJyF,sBAAuB,CACrBC,qCAAsC,iDAExCC,YAAa,CACXC,sBACE,4BACE,6BACE,+BACE,kDADF,qEAEyB,IACvB,mBACEzC,OAAO,OACPD,KAAK,qGAFP,sBAHF,qIAU6C,IAC3C,mBAAGC,OAAO,OAAOD,KAAK,uCAAtB,yCAXF,aA7CZ,SAmEE,cAAC2C,EAAA,EAAD,CACEC,SAAU,OACVC,UAAW,sDACXC,WAAY,cAACC,EAAD,IACZC,iBACE,kFAC8C,IAC5C,cAAC,OAAD,CACEtD,UAAU,kCACVuD,GAAG,SACHnD,YAAY,SACZoD,QAAQ,EACRC,MAAO,IACPxD,QAAS,kBAAMN,EAA4B,WAN7C,6BAFF,4HAa8B,IAC5B,cAAC,OAAD,CACEK,UAAU,kCACVuD,GAAG,WACHnD,YAAY,SACZoD,QAAQ,EACRC,MAAO,IACPxD,QAAS,kBAAMN,EAA4B,aAN7C,2BASQ,IAvBV,kIAyBqC,IACnC,cAAC,OAAD,CACEK,UAAU,kCACVuD,GAAG,OACHnD,YAAY,SACZoD,QAAQ,EACRC,MAAO,IACPxD,QAAS,kBAAMN,EAA4B,SAN7C,8BASQ,IAnCV,oDAuCF+D,aAAc,CACZ,cAACC,EAAA,EAAD,CAEEC,WAAW,SACXC,aAxKc,WACtB,IAEIC,EAFEC,GAAqB,OAAb7E,QAAa,IAAbA,OAAA,EAAAA,EAAeC,SAAU,EASvC,OALE2E,EADY,IAAVC,EACK,WAEA,YAGH,oBAAN,OAA2BA,EAA3B,YAAoCD,EAApC,6BACe,OAAblD,QAAa,IAAbA,OAAA,EAAAA,EAAezB,SAAU,IAD3B,kBA8JsB6E,GACdC,eAAe,UACfC,eAAgB,cAACC,EAAA,EAAD,CAAa1C,oBAAqBA,KAJ9C,UAMN,cAAC2C,EAAA,EAAD,GAA0B,YAC1B,cAACT,EAAA,EAAD,CAEEC,WAAW,OACXC,aAAa,mBACbI,eAAe,UACfC,eAAgB,cAACG,EAAA,EAAD,CAAuBnC,QAASF,KAJ5C,cAYVsC,EAAK,SAACC,GACV,OAAO,sBAAMzE,MAAO,CAAE0E,WAAY,UAA3B,SAAwCD,EAAME,Y,kBC/ExCC,EA1MG,WAAO,IAAD,EACa9E,qBAAWe,KAAtCgE,EADc,EACdA,gBAAiB5F,EADH,EACGA,MAEnB6F,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAiBjG,WAC3BmG,EACJ,qBAAK/E,MAAO,CAAEC,SAAU,QAAxB,SACE,gCACE,8BACGM,SAAS1C,MADZ,KACqB8B,OAFvB,IAII,IACF,mBAAGa,KAAK,qBAAqBC,OAAO,UAApC,yBAEK,IAPP,gBAQgB,IACd,mBAAGD,KAAK,wBAAwBC,OAAO,QAAvC,qBAEK,IAXP,MAYM,IACJ,oBAAGD,KAAK,0BAA0BC,OAAO,UAAzC,kCACwBC,OACnB,IAfP,IAgBI,IACF,mBACED,OAAO,SACPE,IAAI,sBACJH,KAAK,+CAHP,2DAUN,QAAgBlB,IAAZwF,EAAuB,CAAC,IAAD,sBACrBtG,OACiBc,IAAjBwF,EAAQvG,OACVC,EAAO,2DAA6DsG,EAAQvG,MAG9E,IANyB,EAMnByG,EAAkB/F,EAAMgG,QAC5B,SAACC,GAAD,OAAsB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU7H,SAASV,MAAOmI,EAAQzH,SAASV,IAAMuI,EAASvI,KAAOmI,EAAQnI,MAKnFwI,EAAY,GAZO,cAaPH,GAbO,IAazB,2BAAmC,CAAC,IAAzBI,EAAwB,aACC9F,IAA9B6F,EAAUC,EAAI1I,MAAMY,QACtB6H,EAAUC,EAAI1I,MAAMY,MAAQ,IAE9B6H,EAAUC,EAAI1I,MAAMY,MAAMkC,KAAK4F,EAAIxI,aAjBZ,8BAoBzByI,QAAQC,IAAI,UAAWR,GAEvB,IAAMS,EAAc,CAClB,cAACC,EAAA,EAAD,CAEElD,QAAQ,OACR1E,OAAQ,qBAAekH,QAAf,IAAeA,GAAf,UAAeA,EAASzH,gBAAxB,aAAe,EAAmBC,MAH5C,SAKE,sBAAK0C,MAAO,CAAEC,SAAU,OAAQwF,QAAS,OAAQC,WAAY,OAA7D,WACU,OAAPZ,QAAO,IAAPA,OAAA,EAAAA,EAASzH,WACR,qCACGyH,QADH,IACGA,GADH,UACGA,EAASzH,gBADZ,aACG,EAAmBY,QADtB,WACgC6G,QADhC,IACgCA,GADhC,UACgCA,EAASzH,gBADzC,aACgC,EAAmBa,WACjD,uBAFF,OAGG4G,QAHH,IAGGA,GAHH,UAGGA,EAASzH,gBAHZ,aAGG,EAAmBc,IAHtB,WAG4B2G,QAH5B,IAG4BA,GAH5B,UAG4BA,EAASzH,gBAHrC,aAG4B,EAAmBe,MAC7C,2BAII,OAAP0G,QAAO,IAAPA,GAAA,UAAAA,EAASzH,gBAAT,eAAmBU,eAClB,uCACG+G,QADH,IACGA,GADH,UACGA,EAASzH,gBADZ,aACG,EAAmBU,aACpB,2BAGI,OAAP+G,QAAO,IAAPA,GAAA,UAAAA,EAASzH,gBAAT,eAAmBsI,YAClB,uCACGb,QADH,IACGA,GADH,UACGA,EAASzH,gBADZ,aACG,EAAmBsI,UADtB,IACiC,2BAI3B,OAAPb,QAAO,IAAPA,GAAA,UAAAA,EAASzH,gBAAT,eAAmBuI,YAClB,gCACE,uBADF,IACY,qCAAId,QAAJ,IAAIA,GAAJ,UAAIA,EAASzH,gBAAb,aAAI,EAAmBuI,UAAvB,cA5BZ,aAkCJC,GAAQ,EACRb,EAAgB3F,OAAS,GAC3BkG,EAAY/F,KACV,cAACgG,EAAA,EAAD,CAEE5H,OAAO,uCACP0E,QAAQ,UAHV,SAKE,qBAAKtC,MAAO,CAAEC,SAAU,OAAQwF,QAAS,OAAQC,WAAY,OAA7D,SACE,uBAAOI,OAAQ,EAAG9F,MAAO,CAAE+F,OAAQ,QAAnC,SACE,gCACGC,OAAOC,KAAKd,GAAWe,KAAI,SAAC7E,EAAK8E,GAChC,IAAIC,EAAY,KAuBhB,OAtBc,IAAVP,IACFO,EACE,qBAAIC,QAAS,EAAb,UACE,oBACErG,MAAO,CACLsG,YAAa,EACbC,aAAc,EACdC,aAAc,uBAGlB,oBACExG,MAAO,CACLsG,YAAa,EACbC,aAAc,EACdC,aAAc,2BAOxBX,GAAQ,EAEN,qCACGO,EACD,qBAAIpG,MAAO,CAAEyG,cAAe,IAA5B,UACE,qBAAIzG,MAAO,CAAE0G,cAAe,MAAOjB,QAAS,GAA5C,UACGpE,EADH,MAAsD,YAAc8E,GAGpE,oBAAInG,MAAO,CAAE0G,cAAe,MAAOjB,QAAS,GAA5C,SACGN,EAAU9D,GAAK6E,KAAI,SAACS,EAAKR,GACxB,OAAO,8BAAkCQ,EAAIlH,KAAK,OAAjC,cAAgB0G,OAFiB,YAAcA,KAJ/B,SAAWA,gBAlC1D,oBAuDV,IAAIS,OAAwBtH,EAI5B,YAHaA,IAATd,IACFoI,EAAwB,KAGxB,cAACC,EAAA,EAAD,CACEC,cAAc,cACdjJ,MAAO,eAAiBiH,EAAQlI,WAAW6C,KAAK,MAChDsH,YACE,sBAAK/G,MAAO,CAAEgH,MAAO,OAAQC,UAAWL,GAAxC,eACYtH,IAATd,GACC,qBACE0I,IAAI,OACJlH,MAAO,CACLsG,YAAa,GACba,aAAc,GACdC,MAAO,QACPX,cAAe,OAEjBY,IAAK7I,EACLwI,MAAM,QAGV,sBAAKhH,MAAO,CAAEC,SAAU,OAAQwF,QAAS,OAAQC,WAAY,OAA7D,UACGZ,EAAQ/G,cACP,8BACG+G,EAAQ/G,aACT,0BAGH+G,EAAQa,WACP,gCACGb,EAAQa,UADX,IACsB,0BAGvBb,EAAQc,WACP,gCACE,uBACA,8BAAId,EAAQc,UAAZ,gBAMVL,YAAaA,EACbR,OAAQA,IAIZ,OAAO,MC1LLuC,EAAU,uCAAG,WAAOC,GAAP,mBAAAvK,EAAA,6DACXwK,EAAS,oBACTC,EAAU,GAFC,SAIQC,YAAaF,EAAQG,EAAW,uBAJxC,cAIjBF,EAAQG,SAJS,gBAKOF,YAAaF,EAAQG,EAAW,sBALvC,cAKjBF,EAAQI,QALS,iBAMSH,YAAaF,EAAQG,EAAW,wBANzC,eAMjBF,EAAQK,UANS,iBAOgBJ,YAAaF,EAAQG,EAAW,+BAPhD,QAOjBF,EAAQM,iBAPS,OASXC,EAAUC,YAAsBR,EAAS,CAC7C,mBACA,UACA,YACA,aAGFF,EAAWS,GAhBM,4CAAH,sDA4FDE,MAzEf,WAAyB,IAAD,EACoCpI,qBACxDiB,KADMoH,EADc,EACdA,8BADc,KACiBnH,eAGJlB,qBAAWe,MAAtCgE,EAJc,EAIdA,gBAAiB5F,EAJH,EAIGA,MACjBmJ,EAAkBtI,qBAAWuI,KAA7BD,cALc,EAOQE,mBAAS,IAPjB,mBAOfN,EAPe,KAONT,EAPM,KAQtBgB,qBAAU,WACRjB,EAAWC,KACV,IAIH,IAEa,IAFPzC,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAiBjG,WAC7B4J,GAAoB,EAWxB,OAVI1D,IAIF0D,EAHkBvJ,EAAMgG,QACtB,SAACC,GAAD,OAAsB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU7H,SAASV,MAAOmI,EAAQzH,SAASV,IAAMuI,EAASvI,KAAOmI,EAAQnI,MAGvE0C,OAAS,QACkBC,KAA5B,OAAfuF,QAAe,IAAfA,GAAA,UAAAA,EAAiBjG,kBAAjB,eAA6B+G,iBACcrG,KAA5B,OAAfuF,QAAe,IAAfA,GAAA,UAAAA,EAAiBjG,kBAAjB,eAA6BgH,YAI/B,cAAC6C,EAAA,EAAD,CACEC,6BAA6B,qCAC7BC,gBAAgB,EAChBC,UAAW,cAAC,EAAD,IACXZ,QAASA,EACTa,2BAA2B,iCAC3BC,SAAU,EACVC,QACE,cAACC,EAAA,EAAD,CACEC,WAAY,IACZC,OAAQ,CACNC,2BAA4BX,EAC5BY,KAAM,YACNC,UAAW,CACTC,KAAM,CACJC,SAAU,WACVC,OAAQ,cAGZC,sBAAuB,2BACvBC,wBAAyB,MAI/BC,cAAe,cAAC,EAAD,IACfC,oBAAqB,SAACC,GAAU,IAAD,IACzBC,MAAMC,QAAQF,KAAd,UAAuBA,EAAK,UAA5B,iBAAuB,EAASG,YAAhC,aAAuB,EAAerN,KACxCwL,GAA8B,SAAC8B,GAC7B,IACE,IAAMC,EAAQC,SAASF,EAAQrL,WAAWvB,SAASV,MAAQkN,EAAK,GAAGG,KAAKrN,GAIxE,OAHc,IAAVuN,GACF9B,EAAc6B,GAETC,EACP,MAAOE,GACP,OAAO,OAnCjB,SAyCE,cAACC,EAAA,EAAD,OC3FO1C,EAAW,wCAyDT2C,MAvDf,WACE,OACE,cAACC,EAAA,EAAD,CACEC,OAAO,4CACPC,uBAAwB,SAACR,GAAD,cAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAS7M,MAC9CsN,gBAAiB/C,EAAW,0BAC5BgD,0BAA2BC,IAAiBC,iBAC5CC,YAAY,QACZC,gBAAiBH,IAAiBI,SAClCC,iBAAkBC,IAClBC,qBAAsBrO,EACtBsO,kBAAmB,CACjBC,mBAAoBC,YAA8B,IAAI,SAAC7G,GAAD,OAAWA,EAAM/G,UAEzE6N,mBAAmB,EACnBnP,mBAAoBA,EACpBoP,aAAcA,EACdC,iBAAkB,SAAClP,GAAD,uBAAUA,EAAKG,aAAf,aAAU,EAAYY,MACxCoO,uBAAwB,SAACnP,GAAD,oBAAUA,QAAV,IAAUA,GAAV,UAAUA,EAAMG,aAAhB,aAAU,EAAae,OAC/CkO,6BAA8B,CAC5BC,WAAY,CACV/N,MACE,gDACY,IACV,cAAC4E,EAAA,EAAD,CACEzC,MAAO,CACLtC,MAAO,UACPsJ,MAAO,OACP6E,UAAW,UAEbvO,KAAM,cAIZwO,eAAe,EACfC,MACE,cAACC,EAAA,EAAD,CAEE3N,IAAI,wCACJ4N,OAAO,iBACPC,OAAO,YACPC,MAAM,OACNC,YAAY,OACZC,QAAS,GACTC,QAAS,IAPJ,mBAnCf,SAgDE,cAAC,EAAD,OCxDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3M,SAAS4M,eAAe,SAM1BZ,M","file":"static/js/main.627b6398.chunk.js","sourcesContent":["const itemFilterFunction = ({ filterState, filterMode }) => {\n  return (item) => {\n    if (filterMode === \"themen\") {\n      return filterState?.themen?.includes(item.thema.id);\n    } else if (filterMode === \"kategorien\") {\n      for (const cat of item.kategorien) {\n        if (filterState?.kategorien?.includes(cat)) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n};\nexport default itemFilterFunction;\n","import { addSVGToProps, DEFAULT_SVG } from \"react-cismap/tools/svgHelper\";\nconst convertBPKlimaItemsToFeature = async (itemIn) => {\n  let item = await addSVGToProps(itemIn, (i) => i.thema.icon);\n  const text = item?.standort?.name || \"Kein Standort\";\n  const type = \"Feature\";\n  const selected = false;\n  const geometry = item?.standort?.geojson;\n  const color = item?.thema?.farbe;\n  // item.svg=DEFAULT_SVG.code;\n  item.color = item?.thema.farbe;\n  const info = {\n    header: item.thema.name,\n    title: text,\n    additionalInfo: item?.beschreibung,\n    subtitle: (\n      <span>\n        {item?.standort?.strasse} {item?.standort?.hausnummer}\n        <br />\n        {item?.standort?.plz} {item?.standort?.stadt}\n      </span>\n    ),\n  };\n  item.info = info;\n  item.url = item?.website;\n  if (item.bild) {\n    item.foto = \"https://www.wuppertal.de/geoportal/standort_klima/fotos/\" + item.bild;\n  }\n\n  return {\n    text,\n    type,\n    selected,\n    geometry,\n    crs: {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\n\nexport default convertBPKlimaItemsToFeature;\n","const factory = ({ featureCollectionContext }) => {\n  const getThemaById = (id) => {\n    const result = featureCollectionContext?.items?.find((item) => item?.thema?.id === id);\n    return result?.thema?.name;\n  };\n\n  let themenstadtplanDesc = \"?\";\n  if (featureCollectionContext?.filteredItems?.length === featureCollectionContext?.items?.length) {\n    themenstadtplanDesc = undefined;\n  } else if (featureCollectionContext?.filterMode === \"themen\") {\n    if (featureCollectionContext?.filterState?.themen?.length <= 2) {\n      const themenIds = featureCollectionContext?.filterState?.themen;\n      const themen = [];\n      for (const id of themenIds) {\n        themen.push(getThemaById(id));\n      }\n\n      themenstadtplanDesc = \"nach Themen gefiltert (nur \" + themen.join(\", \") + \")\";\n    } else {\n      themenstadtplanDesc =\n        \"nach Themen gefiltert (\" +\n        featureCollectionContext?.filterState?.themen?.length +\n        \" Themen)\";\n    }\n  } else if (featureCollectionContext?.filterMode === \"kategorien\") {\n    if (featureCollectionContext?.filterState?.kategorien?.length <= 3) {\n      themenstadtplanDesc =\n        \"nach Kategorien gefiltert (nur \" +\n        featureCollectionContext?.filterState?.kategorien?.join(\", \") +\n        \")\";\n    } else {\n      themenstadtplanDesc =\n        \"nach Kategorien gefiltert (\" +\n        featureCollectionContext?.filterState?.kategorien?.length +\n        \" Kategorien)\";\n    }\n  }\n\n  if (featureCollectionContext?.filteredItems?.length === 0) {\n    return (\n      <div>\n        <b>Keine Klimaorte gefunden!</b> Bitte überprüfen Sie Ihre Filtereinstellungen.\n      </div>\n    );\n  }\n\n  if (themenstadtplanDesc) {\n    return (\n      <div>\n        <b>Meine Klimaorte:</b> {themenstadtplanDesc}\n      </div>\n    );\n  } else {\n    return undefined;\n  }\n};\n\nexport default factory;\n","const APPERSION = \"0.13.1\";\nconst APPHASH = \"#84e5ef322d43e0afb7eb920add2091c1046d1fff\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getApplicationVersion } from \"./version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { Link, scroller } from \"react-scroll\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal{\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport { Link } from \"react-scroll\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport FilterPanel from \"react-cismap/topicmaps/menu/FilterPanel\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport MenuFooter from \"./MenuFooter\";\nimport CustomizationContextProvider from \"react-cismap/contexts/CustomizationContextProvider\";\n\nimport Icon from \"react-cismap/commons/Icon\";\nimport { addSVGToProps } from \"react-cismap/tools/svgHelper\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const { filterState, filterMode, filteredItems, shownFeatures } =\n    useContext(FeatureCollectionContext);\n  const { setFilterState, setFilterMode } = useContext(FeatureCollectionDispatchContext);\n\n  const { items } = useContext(FeatureCollectionContext);\n\n  let kategorien = [];\n  const katValues = [];\n  let themen = [];\n  const themenValues = [];\n\n  for (const item of items || []) {\n    for (const kat of item.kategorien) {\n      if (!kategorien.includes(kat)) {\n        katValues.push({ key: kat });\n        kategorien.push(kat);\n      }\n    }\n    if (!themen.includes(item.thema.id)) {\n      themen.push(item.thema.id);\n      themenValues.push({ key: item.thema.id, title: item.thema.name, color: item.thema.farbe });\n    }\n  }\n\n  themenValues.sort((a, b) => a.title.localeCompare(b.title));\n  katValues.sort((a, b) => a.key.localeCompare(b.key));\n\n  themen = [];\n\n  for (const t of themenValues) {\n    themen.push(t.key);\n  }\n  kategorien = [];\n\n  for (const k of katValues) {\n    kategorien.push(k.key);\n  }\n\n  const filterConfiguration = {\n    mode: \"tabs\", // list or tabs\n    filters: [\n      {\n        title: \"Themen\",\n        key: \"themen\",\n        icon: \"folder\",\n        type: \"tags\", //\"checkBoxes\",\n        values: themenValues,\n        setAll: () => {\n          setFilterState({ ...filterState, themen });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, themen: [] });\n        },\n        colorizer: (item, selected) => (selected ? item.color : \"#eeeeee\"),\n      },\n      {\n        title: \"Kategorien\",\n        key: \"kategorien\",\n        icon: \"tags\",\n        type: \"tags\",\n        values: katValues,\n        setAll: () => {\n          setFilterState({ ...filterState, kategorien });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, kategorien: [] });\n        },\n      },\n    ],\n  };\n\n  if ((filterState === undefined) & (items !== undefined)) {\n    setFilterState({ kategorien, themen });\n  }\n  if ((filterMode === undefined) & (items !== undefined)) {\n    setFilterMode(\"themen\");\n  }\n  const topicMapTitle = \"Klimaortkarte Wuppertal\";\n  const simpleHelp = undefined;\n\n  const getFilterHeader = () => {\n    const count = filteredItems?.length || 0;\n\n    let term;\n    if (count === 1) {\n      term = \"Standort\";\n    } else {\n      term = \"Standorte\";\n    }\n\n    return `Meine Klimaorte (${count} ${term} gefunden, davon ${\n      shownFeatures?.length || \"0\"\n    } in der Karte)`;\n  };\n  const configurableDocBlocks = getSimpleHelpForTM(topicMapTitle, simpleHelp);\n  configurableDocBlocks[0].configs.splice(5, 0, {\n    title: \"Filtern\",\n    bsStyle: \"warning\",\n    contentBlockConf: {\n      type: \"REACTCOMP\",\n      content: (\n        <div>\n          <p>\n            Im Bereich &quot;<strong>Filter</strong>&quot; können Sie im Anwendungsmenü{\" \"}\n            <Icon name='bars' /> die in der Karte angezeigten Klimaorte so ausdünnen, dass nur die\n            für Sie interessanten Orte übrig bleiben. Dabei umfasst die Filterung die Angebote an\n            den Klimastandorten, wobei sich ein Angebot aus einem Thema und einer Kategorie ergibt.\n            Standardmäßig sind die Einstellungen hier so gesetzt, dass alle verfügbaren Klimaorte\n            angezeigt werden.\n          </p>\n          <p>\n            Ihnen stehen somit zwei Filterkriterien zur Verfügung: \"Themen\" und \"Kategorien\".\n            Innerhalb dieser Kriterien können sie in einer alphabetisch sortieren Menge an\n            Schlagworten (Tags) bestimmte Begriffe per Mausklick selektieren bzw. deselektieren; die\n            Auswahl aller bzw. keines der Schlagworte erfolgt über die Schaltfläche{\" \"}\n            <a class='renderAsLink'>alle</a> bzw. <a class='renderAsLink'>keine</a>.\n          </p>\n          <p>\n            Ihre Einstellungen werden direkt in der blauen Titelzeile des Bereichs \"\n            <strong>Filter</strong>\" und in dem Donut-Diagramm, das Sie rechts neben oder unter den\n            Filteroptionen finden, ausgewertet. Die Titelzeile zeigt die Gesamtanzahl der Klimaorte,\n            die den von Ihnen gesetzten Filterbedingungen entsprechen. Das Donut-Diagramm zeigt\n            zusätzlich die Verteilung der Klimaorte entsprechend der Filterkriterien \"Themen\" oder\n            \"Kategorien\". Bewegen Sie dazu den Mauszeiger auf eines der farbigen Segmente des\n            Diagramms. Die Farben des Donut-Diagramms entsprechen den farbigen Hintergründen der\n            Schlagworte aus dem Filterkriterium \"Themen\".\n          </p>\n        </div>\n      ),\n    },\n  });\n\n  return (\n    <CustomizationContextProvider\n      customizations={{\n        inKartePositionieren: {\n          listWithSymbols: (\n            <p>\n              Durch das in der Auswahlliste vorangestellte Symbol erkennen Sie, ob es sich bei einem\n              Treffer um einen{\" \"}\n              <NW>\n                <Icon name='circle' /> Stadtbezirk\n              </NW>\n              , ein{\" \"}\n              <NW>\n                <Icon name='pie-chart' /> Quartier\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='home' /> Adresse\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='road' /> Straße ohne Hausnummern\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='child' /> Kindertageseinrichtung\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='graduation-cap' /> Schule\n              </NW>{\" \"}\n              oder einen{\" \"}\n              <NW>\n                <Icon name='sun' /> Klimaort\n              </NW>{\" \"}\n              handelt.\n            </p>\n          ),\n        },\n        fachobjekteAuswaehlen: {\n          furtherExplanationOfClickableContent: \" (Signaturen oder dunkelblaue Fahrradtrassen)\",\n        },\n        hintergrund: {\n          additionalDatasources: (\n            <p>\n              <ul>\n                <li>\n                  <strong>Fernwärme</strong>: Kartendienst (WMS) der Stadt Wuppertal in\n                  Zusammenarbeit mit der{\" \"}\n                  <a\n                    target='_wsw'\n                    href='https://www.wsw-online.de/wsw-energie-wasser/privatkunden/produkte/fernwaerme/talwaerme-wuppertal/'\n                  >\n                    WSW GmbH\n                  </a>\n                  . Datengrundlage: Fernwärmeleitungen der Wuppertaler Stadtwerke GmbH (Stand\n                  02.2021) mit einer Puffergröße von 10 m. ©{\" \"}\n                  <a target='_wsw' href='https://www.wsw-online.de/impressum/'>\n                    Wuppertaler Stadtwerke GmbH\n                  </a>\n                  .\n                </li>\n              </ul>\n            </p>\n          ),\n        },\n      }}\n    >\n      <ModalApplicationMenu\n        menuIcon={\"bars\"}\n        menuTitle={\"Meine Klimaorte, Einstellungen und Kompaktanleitung\"}\n        menuFooter={<MenuFooter />}\n        menuIntroduction={\n          <span>\n            Benutzen Sie die Auswahlmöglichkeiten unter{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='filter'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"filter\")}\n            >\n              Meine Klimaorte\n            </Link>\n            , um die in der Karte angezeigten vorbildlichen Klimaorte auf die für Sie relevanten\n            Themen zu beschränken. Über{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='settings'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"settings\")}\n            >\n              Einstellungen\n            </Link>{\" \"}\n            können Sie die Darstellung der Hintergrundkarte und der klimarelevanten Themen an Ihre\n            Interesse anpassen. Wählen Sie die{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='help'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"help\")}\n            >\n              Kompaktanleitung\n            </Link>{\" \"}\n            für detailliertere Bedienungsinformationen.\n          </span>\n        }\n        menuSections={[\n          <Section\n            key='filter'\n            sectionKey='filter'\n            sectionTitle={getFilterHeader()}\n            sectionBsStyle='primary'\n            sectionContent={<FilterPanel filterConfiguration={filterConfiguration} />}\n          />,\n          <DefaultSettingsPanel key='settings' />,\n          <Section\n            key='help'\n            sectionKey='help'\n            sectionTitle='Kompaktanleitung'\n            sectionBsStyle='default'\n            sectionContent={<ConfigurableDocBlocks configs={configurableDocBlocks} />}\n          />,\n        ]}\n      />\n    </CustomizationContextProvider>\n  );\n};\nexport default MyMenu;\nconst NW = (props) => {\n  return <span style={{ whiteSpace: \"nowrap\" }}>{props.children}</span>;\n};\n","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nimport { getApplicationVersion } from \"./version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\n\nconst InfoPanel = () => {\n  const { selectedFeature, items } = useContext(FeatureCollectionContext);\n\n  const angebot = selectedFeature?.properties;\n  const footer = (\n    <div style={{ fontSize: \"11px\" }}>\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n  if (angebot !== undefined) {\n    let foto;\n    if (angebot.bild !== undefined) {\n      foto = \"https://www.wuppertal.de/geoportal/standort_klima/fotos/\" + angebot.bild;\n    }\n\n    const weitereAngebote = items.filter(\n      (testItem) => testItem?.standort.id === angebot.standort.id && testItem.id !== angebot.id\n    );\n    //data structure for \"weitere Angebote\"\n    // gruppenwechsel for thema\n\n    const addOffers = {};\n    for (const ang of weitereAngebote) {\n      if (addOffers[ang.thema.name] === undefined) {\n        addOffers[ang.thema.name] = [];\n      }\n      addOffers[ang.thema.name].push(ang.kategorien);\n    }\n\n    console.log(\"angebot\", angebot);\n\n    const subSections = [\n      <SecondaryInfoPanelSection\n        key='standort'\n        bsStyle='info'\n        header={\"Standort: \" + angebot?.standort?.name}\n      >\n        <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n          {angebot?.standort && (\n            <b>\n              {angebot?.standort?.strasse} {angebot?.standort?.hausnummer}\n              <br />\n              {angebot?.standort?.plz} {angebot?.standort?.stadt}\n              <br />\n            </b>\n          )}\n\n          {angebot?.standort?.beschreibung && (\n            <div>\n              {angebot?.standort?.beschreibung}\n              <br />\n            </div>\n          )}\n          {angebot?.standort?.bemerkung && (\n            <div>\n              {angebot?.standort?.bemerkung} <br />\n            </div>\n          )}\n\n          {angebot?.standort?.kommentar && (\n            <div>\n              <br></br> <i>{angebot?.standort?.kommentar} </i>\n            </div>\n          )}\n        </div>\n      </SecondaryInfoPanelSection>,\n    ];\n    let first = true;\n    if (weitereAngebote.length > 0) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='weitereAngebote'\n          header='Weitere Angebote an diesem Standort:'\n          bsStyle='success'\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <table border={0} style={{ xwidth: \"100%\" }}>\n              <tbody>\n                {Object.keys(addOffers).map((key, index) => {\n                  let separator = null;\n                  if (first !== true) {\n                    separator = (\n                      <tr colspan={2}>\n                        <td\n                          style={{\n                            paddingLeft: 5,\n                            paddingright: 5,\n                            borderBottom: \"1px solid #dddddd\",\n                          }}\n                        ></td>\n                        <td\n                          style={{\n                            paddingLeft: 5,\n                            paddingright: 5,\n                            borderBottom: \"1px solid #dddddd\",\n                          }}\n                        ></td>\n                      </tr>\n                    );\n                  }\n\n                  first = false;\n                  return (\n                    <>\n                      {separator}\n                      <tr style={{ paddingBottom: 10 }} key={\"addAng\" + index}>\n                        <td style={{ verticalAlign: \"top\", padding: 5 }} key={\"addAng.L.\" + index}>\n                          {key}:\n                        </td>\n                        <td style={{ verticalAlign: \"top\", padding: 5 }} key={\"addAng.R.\" + index}>\n                          {addOffers[key].map((val, index) => {\n                            return <div key={\"kategorien.\" + index}>{val.join(\", \")}</div>;\n                          })}\n                        </td>\n                      </tr>\n                    </>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          {/* <pre>{JSON.stringify(addOffers, null, 2)}</pre> */}\n        </SecondaryInfoPanelSection>\n      );\n    }\n\n    let minHeight4MainSextion = undefined;\n    if (foto !== undefined) {\n      minHeight4MainSextion = 250;\n    }\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\"Datenblatt: \" + angebot.kategorien.join(\", \")}\n        mainSection={\n          <div style={{ width: \"100%\", minHeight: minHeight4MainSextion }}>\n            {foto !== undefined && (\n              <img\n                alt='Bild'\n                style={{\n                  paddingLeft: 10,\n                  paddingRight: 10,\n                  float: \"right\",\n                  paddingBottom: \"5px\",\n                }}\n                src={foto}\n                width='250'\n              />\n            )}\n            <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n              {angebot.beschreibung && (\n                <b>\n                  {angebot.beschreibung}\n                  <br />\n                </b>\n              )}\n              {angebot.bemerkung && (\n                <div>\n                  {angebot.bemerkung} <br />\n                </div>\n              )}\n              {angebot.kommentar && (\n                <div>\n                  <br></br>\n                  <i>{angebot.kommentar} </i>\n                </div>\n              )}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n        footer={footer}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport { md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport MyMenu from \"./Menu\";\nimport InfoPanel from \"./SecondaryInfo\";\n\nimport { dataHost } from \"./App\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { TopicMapDispatchContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nconst getGazData = async (setGazData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n  sources.adressen = await md5FetchText(prefix, dataHost + \"/data/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, dataHost + \"/data/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, dataHost + \"/data/quartiere.json\");\n  sources.bpklimastandorte = await md5FetchText(prefix, dataHost + \"/data/bpklimastandorte.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"bpklimastandorte\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\n\nfunction KlimaorteMap() {\n  const { setSelectedFeatureByPredicate, setFilterState } = useContext(\n    FeatureCollectionDispatchContext\n  );\n  const { selectedFeature, items } = useContext(FeatureCollectionContext);\n  const { zoomToFeature } = useContext(TopicMapDispatchContext);\n\n  const [gazData, setGazData] = useState([]);\n  useEffect(() => {\n    getGazData(setGazData);\n  }, []);\n  //   console.log(\"selectedFeature\", selectedFeature);\n\n  let weitereAngebote;\n  const angebot = selectedFeature?.properties;\n  let moreDataAvailable = false;\n  if (angebot) {\n    weitereAngebote = items.filter(\n      (testItem) => testItem?.standort.id === angebot.standort.id && testItem.id !== angebot.id\n    );\n    moreDataAvailable =\n      weitereAngebote.length > 0 ||\n      selectedFeature?.properties?.bemerkung !== undefined ||\n      selectedFeature?.properties?.kommentar !== undefined;\n  }\n\n  return (\n    <TopicMapComponent\n      applicationMenuTooltipString='Filter | Einstellungen | Anleitung'\n      locatorControl={true}\n      modalMenu={<MyMenu />}\n      gazData={gazData}\n      gazetteerSearchPlaceholder='Klimaort | Stadtteil | Adresse'\n      homeZoom={9}\n      infoBox={\n        <GenericInfoBoxFromFeature\n          pixelwidth={400}\n          config={{\n            displaySecondaryInfoAction: moreDataAvailable,\n            city: \"Wuppertal\",\n            navigator: {\n              noun: {\n                singular: \"Klimaort\",\n                plural: \"Klimaorte\",\n              },\n            },\n            noCurrentFeatureTitle: \"Keine Klimaorte gefunden\",\n            noCurrentFeatureContent: \"\",\n          }}\n        />\n      }\n      secondaryInfo={<InfoPanel />}\n      gazetteerHitTrigger={(hits) => {\n        if (Array.isArray(hits) && hits[0]?.more?.id) {\n          setSelectedFeatureByPredicate((feature) => {\n            try {\n              const check = parseInt(feature.properties.standort.id) === hits[0].more.id;\n              if (check === true) {\n                zoomToFeature(feature);\n              }\n              return check;\n            } catch (e) {\n              return false;\n            }\n          });\n        }\n      }}\n    >\n      <FeatureCollection />\n    </TopicMapComponent>\n  );\n}\n\nexport default KlimaorteMap;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { MappingConstants } from \"react-cismap\";\nimport Icon from \"react-cismap/commons/Icon\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport StyledWMSTileLayer from \"react-cismap/StyledWMSTileLayer\";\nimport { getClusterIconCreatorFunction } from \"react-cismap/tools/uiHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport getGTMFeatureStyler from \"react-cismap/topicmaps/generic/GTMStyler\";\nimport \"./App.css\";\nimport itemFilterFunction from \"./helper/filter\";\nimport convertBPKlimaItemsToFeature from \"./helper/itemConverter\";\nimport titleFactory from \"./helper/titleFactory\";\nimport KlimaorteMap from \"./KlimaorteMap\";\n\nexport const dataHost = \"https://wupp-topicmaps-data.cismet.de\";\n\nfunction App() {\n  return (\n    <TopicMapContextProvider\n      appKey='BestPracticeKlimaschutzWuppertal.TopicMap'\n      featureTooltipFunction={(feature) => feature?.text}\n      featureItemsURL={dataHost + \"/data/bpklima.data.json\"}\n      referenceSystemDefinition={MappingConstants.proj4crs25832def}\n      mapEPSGCode='25832'\n      referenceSystem={MappingConstants.crs25832}\n      getFeatureStyler={getGTMFeatureStyler}\n      convertItemToFeature={convertBPKlimaItemsToFeature}\n      clusteringOptions={{\n        iconCreateFunction: getClusterIconCreatorFunction(30, (props) => props.color),\n      }}\n      clusteringEnabled={true}\n      itemFilterFunction={itemFilterFunction}\n      titleFactory={titleFactory}\n      classKeyFunction={(item) => item.thema?.name}\n      getColorFromProperties={(item) => item?.thema?.farbe}\n      additionalLayerConfiguration={{\n        fernwaerme: {\n          title: (\n            <span>\n              Fernwärme{\" \"}\n              <Icon\n                style={{\n                  color: \"#EEB48C\",\n                  width: \"30px\",\n                  textAlign: \"center\",\n                }}\n                name={\"circle\"}\n              />\n            </span>\n          ),\n          initialActive: true,\n          layer: (\n            <StyledWMSTileLayer\n              key={\"fernwaermewsw\"}\n              url='https://maps.wuppertal.de/deegree/wms'\n              layers='fernwaermewsw '\n              format='image/png'\n              tiled='true'\n              transparent='true'\n              maxZoom={19}\n              opacity={0.7}\n            />\n          ),\n        },\n      }}\n    >\n      <KlimaorteMap />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}